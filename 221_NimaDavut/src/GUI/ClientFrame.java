/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static java.awt.image.ImageObserver.HEIGHT;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import service_types.GymAndFitness;
import service_types.Rehabilitation;
import service_types.Services;
import service_types.SpaAndSauna;
import service_types.YogaAndStretching;
import system.Client;
import system.UniverseHealthSys;

/**
 *
 * @author Nima's Stuff
 */
public class ClientFrame extends javax.swing.JFrame{

    
    LoginFrame lf;
    HospitalFrame hp = new HospitalFrame(this);
    double total=0;
        Exit ex = new Exit();


    
    /**
     * Creates new form ClientFrame
     */
    public ClientFrame(LoginFrame ff) {
        initComponents();
        
        lf=ff;
        hp.setVisible(false);
        gdt.setVisible(false);
        glt.setVisible(false);     
        gtt.setVisible(false);
        gpt.setVisible(false);
         sdt.setVisible(false);
        stt.setVisible(false);        
        slt.setVisible(false);
        spt.setVisible(false);
        ydt.setVisible(false);
        ytt.setVisible(false);
        ylt.setVisible(false);
        ypt.setVisible(false);
        rdt.setVisible(false);
        rlt.setVisible(false);     
        rtt.setVisible(false);
        rpt.setVisible(false);
    }

    public void unchecks(boolean spacheck)
    {
        if(spacheck)
        {
        sdt.setVisible(false);
        stt.setVisible(false);        
        slt.setVisible(false);
        spt.setVisible(false);  
        }
        else
        {
        sdt.setVisible(true);
        stt.setVisible(true);        
        slt.setVisible(true);
        spt.setVisible(true);
        }
    }

    public JCheckBox getSpac1() {
        return spac1;
    }

    public JCheckBox getGymc() {
        return gymc;
    }

    public JComboBox<String> getStt() {
        return stt;
    }
    public void uncheck(boolean closed)
    {
        if(closed)
        {
            rdt.setVisible(false);
            rlt.setVisible(false);     
            rtt.setVisible(false);
            rpt.setVisible(false);
        }
        else if(rehabc.isSelected())
        {
            rdt.setVisible(true);
            rlt.setVisible(true);     
            rtt.setVisible(true);
            rpt.setVisible(true); 
        }

    }

    public JCheckBox getRehabc() {
        return rehabc;
    }
    
   
    int setDay(String s)
    {
        if(s.equalsIgnoreCase("even"))
            return 1;
        return 2;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rehabc = new javax.swing.JCheckBox();
        disc = new javax.swing.JCheckBox();
        yogac = new javax.swing.JCheckBox();
        gymc = new javax.swing.JCheckBox();
        bdate = new javax.swing.JTextField();
        coupon = new javax.swing.JTextField();
        company = new javax.swing.JTextField();
        spac1 = new javax.swing.JCheckBox();
        finish = new javax.swing.JButton();
        fakex2 = new javax.swing.JButton();
        calc = new javax.swing.JButton();
        discount = new javax.swing.JLabel();
        Totalp = new javax.swing.JLabel();
        sdt = new javax.swing.JComboBox<>();
        rdt = new javax.swing.JComboBox<>();
        gdt = new javax.swing.JComboBox<>();
        ydt = new javax.swing.JComboBox<>();
        ytt = new javax.swing.JComboBox<>();
        stt = new javax.swing.JComboBox<>();
        rtt = new javax.swing.JComboBox<>();
        gtt = new javax.swing.JComboBox<>();
        ylt = new javax.swing.JComboBox<>();
        slt = new javax.swing.JComboBox<>();
        rlt = new javax.swing.JComboBox<>();
        glt = new javax.swing.JComboBox<>();
        rpt = new javax.swing.JComboBox<>();
        spt = new javax.swing.JComboBox<>();
        ypt = new javax.swing.JComboBox<>();
        gpt = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        rehabc.setBackground(new java.awt.Color(34, 34, 34));
        rehabc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rehabcActionPerformed(evt);
            }
        });
        getContentPane().add(rehabc);
        rehabc.setBounds(20, 180, 20, 21);

        disc.setBackground(new java.awt.Color(34, 34, 34));
        disc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discActionPerformed(evt);
            }
        });
        getContentPane().add(disc);
        disc.setBounds(140, 370, 20, 21);

        yogac.setBackground(new java.awt.Color(34, 34, 34));
        yogac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yogacActionPerformed(evt);
            }
        });
        getContentPane().add(yogac);
        yogac.setBounds(20, 260, 20, 21);

        gymc.setBackground(new java.awt.Color(34, 34, 34));
        gymc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gymcActionPerformed(evt);
            }
        });
        getContentPane().add(gymc);
        gymc.setBounds(20, 140, 20, 21);
        getContentPane().add(bdate);
        bdate.setBounds(140, 300, 70, 30);
        getContentPane().add(coupon);
        coupon.setBounds(300, 300, 70, 30);
        getContentPane().add(company);
        company.setBounds(470, 300, 70, 30);

        spac1.setBackground(new java.awt.Color(34, 34, 34));
        spac1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spac1ActionPerformed(evt);
            }
        });
        getContentPane().add(spac1);
        spac1.setBounds(20, 220, 20, 21);

        finish.setText("FINISH");
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });
        getContentPane().add(finish);
        finish.setBounds(200, 400, 200, 23);

        fakex2.setBackground(new java.awt.Color(255, 51, 51));
        fakex2.setText("X");
        fakex2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fakex2ActionPerformed(evt);
            }
        });
        getContentPane().add(fakex2);
        fakex2.setBounds(510, 10, 60, 30);

        calc.setText("Calculate");
        calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcActionPerformed(evt);
            }
        });
        getContentPane().add(calc);
        calc.setBounds(200, 366, 100, 30);

        discount.setForeground(new java.awt.Color(255, 255, 255));
        discount.setText("%50 Discount");
        getContentPane().add(discount);
        discount.setBounds(60, 400, 100, 14);

        Totalp.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        Totalp.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(Totalp);
        Totalp.setBounds(400, 350, 110, 50);

        sdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EVEN", "ODD" }));
        getContentPane().add(sdt);
        sdt.setBounds(160, 220, 60, 20);

        rdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EVEN", "ODD" }));
        getContentPane().add(rdt);
        rdt.setBounds(160, 180, 60, 20);

        gdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EVEN", "ODD" }));
        gdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gdtActionPerformed(evt);
            }
        });
        getContentPane().add(gdt);
        gdt.setBounds(160, 140, 60, 20);

        ydt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EVEN", "ODD" }));
        getContentPane().add(ydt);
        ydt.setBounds(160, 260, 60, 20);

        ytt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MORNING", "AFTERNOON", "EVENING" }));
        getContentPane().add(ytt);
        ytt.setBounds(230, 260, 90, 20);

        stt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MORNING", "AFTERNOON", "EVENING" }));
        getContentPane().add(stt);
        stt.setBounds(230, 220, 90, 20);

        rtt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MORNING", "AFTERNOON", "EVENING" }));
        getContentPane().add(rtt);
        rtt.setBounds(230, 180, 90, 20);

        gtt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MORNING", "AFTERNOON", "EVENING" }));
        getContentPane().add(gtt);
        gtt.setBounds(230, 140, 90, 20);

        ylt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy", "Luxury", "Grand" }));
        getContentPane().add(ylt);
        ylt.setBounds(330, 260, 80, 20);

        slt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy", "Luxury", "Grand" }));
        getContentPane().add(slt);
        slt.setBounds(330, 220, 80, 20);

        rlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy", "Luxury", "Grand" }));
        getContentPane().add(rlt);
        rlt.setBounds(330, 180, 80, 20);

        glt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy", "Luxury", "Grand" }));
        getContentPane().add(glt);
        glt.setBounds(330, 140, 80, 20);

        rpt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mental", "Physical", "PostInjury", "PostSurgery" }));
        getContentPane().add(rpt);
        rpt.setBounds(420, 180, 140, 20);

        spt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Relax", "Massage", "Beauty" }));
        getContentPane().add(spt);
        spt.setBounds(420, 220, 140, 20);

        ypt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yoga", "Stretching", "Pilates" }));
        getContentPane().add(ypt);
        ypt.setBounds(420, 260, 140, 20);

        gpt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Strength", "Mass" }));
        getContentPane().add(gpt);
        gpt.setBounds(420, 140, 140, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Client-Member.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 590, 440);
        getContentPane().add(jPanel1);
        jPanel1.setBounds(240, 200, 10, 10);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rehabcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rehabcActionPerformed
    
        if(rehabc.isSelected())
        {
            if(!spac1.isSelected() && !yogac.isSelected() && !gymc.isSelected()){
            this.setVisible(false);
            hp.setLocationRelativeTo(null);
            hp.setVisible(true);}
            rdt.setVisible(true);
            rlt.setVisible(true);     
            rtt.setVisible(true);
            rpt.setVisible(true);
        }
        else
        {
//            hp.setVisible(false);
            rdt.setVisible(false);
            rlt.setVisible(false);     
            rtt.setVisible(false);
            rpt.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_rehabcActionPerformed

    private void discActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discActionPerformed

    private void yogacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yogacActionPerformed
        if(yogac.isSelected())
        {
            if(!rehabc.isSelected()&& !spac1.isSelected() &&!gymc.isSelected()){
            this.setVisible(false);
            hp.setLocationRelativeTo(null);
            hp.setVisible(true);}
        ydt.setVisible(true);
        ytt.setVisible(true);
        ylt.setVisible(true);
        ypt.setVisible(true);
        }
        else
        {
             ydt.setVisible(false);
        ytt.setVisible(false);
        ylt.setVisible(false);
        ypt.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_yogacActionPerformed

    private void spac1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spac1ActionPerformed
        if(spac1.isSelected()){
            if(!rehabc.isSelected()&& !yogac.isSelected() && !gymc.isSelected()){
        this.setVisible(false);
        hp.setLocationRelativeTo(null);
        hp.setVisible(true);}
        sdt.setVisible(true);
        stt.setVisible(true);        
        slt.setVisible(true);
        spt.setVisible(true);
        }
        else
        {
        sdt.setVisible(false);
        stt.setVisible(false);        
        slt.setVisible(false);
        spt.setVisible(false);     
                }

// TODO add your handling code here:
    }//GEN-LAST:event_spac1ActionPerformed
public boolean checkFields()
    {
        try {
           if(coupon.getText().isEmpty())
               coupon.setText("-1");
            Integer.parseInt(coupon.getText());
            Double.parseDouble(bdate.getText());
                    
        } catch (NumberFormatException exception) {
            // Output expected NumberFormatException.
          
         return false;
        }
       return true;
    }
    public String checkDisc()
    {
        if(disc.isSelected())
            return "yes";
        return "no";
    }
    
    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        total=0; 
        if(gymc.isSelected())
            total+=400;
         if(rehabc.isSelected())
            total+=600;
         if(spac1.isSelected())
            total+=250;
         if(yogac.isSelected())
            total+=300;
         if(disc.isSelected())
             total*=.50;
         if(bdate.getText().isEmpty()  || company.getText().isEmpty())
             javax.swing.JOptionPane.showMessageDialog(jPanel1, "FILL ALL FIELDS!",
                    "EMPTY FIELD", HEIGHT);
         else if(!checkFields())
         javax.swing.JOptionPane.showMessageDialog(jPanel1, "Birthdate Must be Entered as DD.MM\n"
                 +"Coupon example: 11111",
                    "FLASE FIELD DATA", HEIGHT);
         
         else{
         ArrayList<Services> arrS = new ArrayList();
        
        if(gymc.isSelected())
          {
              //              choiceId, newNameSurname, newPassword1, bday, couponCode, companyName, charity, day, time, level, preference
              //int daysAttending, String timeDuringDay, String serviceLevel, String preference
              
              Services tempG = new GymAndFitness(
                      setDay(String.valueOf(gdt.getSelectedItem())),
                      String.valueOf(gtt.getSelectedItem()),
                      String.valueOf(glt.getSelectedItem()),
                      String.valueOf(gpt.getSelectedItem()));
              arrS.add(tempG);
              
//              UniverseHealthSys.addPerson(Integer.parseInt(lf.getNewId().getText()),
//                      lf.getNsname().getText(),lf.getNpass().getText(),
//                      Double.parseDouble(bdate.getText()),
//                      Integer.parseInt(coupon.getText()), company.getText(),
//                      checkDisc(),tempG, Double.parseDouble(Totalp.getText()));
              
//                    setDay(String.valueOf(gdt.getSelectedItem())),
//                    String.valueOf(gtt.getSelectedItem()),
//                    String.valueOf(glt.getSelectedItem()),
//                    String.valueOf(gpt.getSelectedItem()), "", 0);
            }
        if(spac1.isSelected())
        {
//                 getService("spa", setDay(String.valueOf(sdt.getSelectedItem())), 
//                    String.valueOf(stt.getSelectedItem()),
//                    String.valueOf(slt.getSelectedItem()),
//                    String.valueOf(spt.getSelectedItem()), "", 0);
            Services tempS = new SpaAndSauna(
                      setDay(String.valueOf(sdt.getSelectedItem())),
                      String.valueOf(stt.getSelectedItem()),
                      String.valueOf(slt.getSelectedItem()),
                      String.valueOf(spt.getSelectedItem()));
              arrS.add(tempS);
        }
        if(yogac.isSelected())
        {
//                 getService("yoga", setDay(String.valueOf(ydt.getSelectedItem())), 
//                    String.valueOf(ytt.getSelectedItem()),
//                    String.valueOf(ylt.getSelectedItem()),
//                    String.valueOf(ypt.getSelectedItem()), "", 0);
            Services tempY = new YogaAndStretching(
                      setDay(String.valueOf(ydt.getSelectedItem())),
                      String.valueOf(ytt.getSelectedItem()),
                      String.valueOf(ylt.getSelectedItem()),
                      String.valueOf(ypt.getSelectedItem()));
              arrS.add(tempY);
        }
        if(rehabc.isSelected())
        {
//                 getService("rehab", setDay(String.valueOf(rdt.getSelectedItem())), 
//                    String.valueOf(rtt.getSelectedItem()),
//                    String.valueOf(rlt.getSelectedItem()),
//                    String.valueOf(rpt.getSelectedItem()), HospitalFrame.docName
//                         ,HospitalFrame.stat);
            Services tempR = new Rehabilitation(
                      setDay(String.valueOf(rdt.getSelectedItem())),
                      String.valueOf(rtt.getSelectedItem()),
                      String.valueOf(rlt.getSelectedItem()),
                      String.valueOf(rpt.getSelectedItem()));
              arrS.add(tempR);
        }
        try {
            //        lfn.goToLogIn();
            UniverseHealthSys.addPerson(Integer.parseInt(lf.getFinalId()),
                    lf.getNsname().getText(),lf.getNpass().getText(),
                    Double.parseDouble(bdate.getText()),
                    Integer.parseInt(coupon.getText()), company.getText(),
                    checkDisc(),arrS,HospitalFrame.docName,HospitalFrame.stat ,total);
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         if(Integer.parseInt(coupon.getText())!=-1)
            javax.swing.JOptionPane.showMessageDialog(jPanel1, "Coupons will be added to your payment after submission of data.");
        this.setVisible(false);
        PostRFrame lfn = new PostRFrame();


        lfn.setSize(512, 387);
        lfn.setLocationRelativeTo(null);
        lfn.setVisible(true);
         }
//         
//        try {
//            FileOutputStream Ofile = new FileOutputStream("output.bin");
//            ObjectOutputStream objo;
//             objo = new ObjectOutputStream(Ofile);
//             objo.writeObject(UniverseHealthSys.getRecords());
//             objo.close();
//            // TODO add your handling code here:
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        
        
    }//GEN-LAST:event_finishActionPerformed

    

    private void fakex2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fakex2ActionPerformed
         this.setVisible(false);
        ex.setSize(650,650);
        ex.setLocationRelativeTo(null);
        ex.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_fakex2ActionPerformed

    private void gymcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gymcActionPerformed
        if(gymc.isSelected()){
           if(!rehabc.isSelected() && !yogac.isSelected() && !spac1.isSelected()){
            this.setVisible(false);
            hp.setLocationRelativeTo(null);
            hp.setVisible(true);}
        gdt.setVisible(true);
        glt.setVisible(true);     
        gtt.setVisible(true);
        gpt.setVisible(true);
        }
        else{
               gdt.setVisible(false);
        glt.setVisible(false);     
        gtt.setVisible(false);
        gpt.setVisible(false); 
                }
        // TODO add your handling code here:
    }//GEN-LAST:event_gymcActionPerformed

    private void calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcActionPerformed
        total=0;
        if(gymc.isSelected())
            total+=400;
         if(rehabc.isSelected())
            total+=600;
         if(spac1.isSelected())
            total+=250;
         if(yogac.isSelected())
            total+=300;
         if(disc.isSelected())
             total*=.50;
        Totalp.setText(String.valueOf(total));
       
        // TODO add your handling code here:
    }//GEN-LAST:event_calcActionPerformed


    private void gdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gdtActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_gdtActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Totalp;
    private javax.swing.JTextField bdate;
    private javax.swing.JButton calc;
    private javax.swing.JTextField company;
    private javax.swing.JTextField coupon;
    private javax.swing.JCheckBox disc;
    private javax.swing.JLabel discount;
    private javax.swing.JButton fakex2;
    private javax.swing.JButton finish;
    private javax.swing.JComboBox<String> gdt;
    private javax.swing.JComboBox<String> glt;
    private javax.swing.JComboBox<String> gpt;
    private javax.swing.JComboBox<String> gtt;
    private javax.swing.JCheckBox gymc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> rdt;
    private javax.swing.JCheckBox rehabc;
    private javax.swing.JComboBox<String> rlt;
    private javax.swing.JComboBox<String> rpt;
    private javax.swing.JComboBox<String> rtt;
    private javax.swing.JComboBox<String> sdt;
    private javax.swing.JComboBox<String> slt;
    private javax.swing.JCheckBox spac1;
    private javax.swing.JComboBox<String> spt;
    private javax.swing.JComboBox<String> stt;
    private javax.swing.JComboBox<String> ydt;
    private javax.swing.JComboBox<String> ylt;
    private javax.swing.JCheckBox yogac;
    private javax.swing.JComboBox<String> ypt;
    private javax.swing.JComboBox<String> ytt;
    // End of variables declaration//GEN-END:variables
}
